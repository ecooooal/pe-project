{% from 'components/core/show-nav-item' import show_nav_item %}
{% from 'components/core/breadcrumbs' import breadcrumb %}
{% from 'components/core/show-header' import show_header %}
{% from 'components/core/show-item' import show_item %}
{% from 'components/core/index-table' import table %}
{% import 'components/core/forms' as forms %}

{% set values = {
    'value' : 'Value',
    'density' : 'Density'
} %}

{% extends 'components/core/faculty-layout' %}
{% set exam_topic_ids = exam_topics|map(t => t.id) %}

{% block content %}
{{ breadcrumb() }}
<div class="flex flex-col mx-4 pl-4">
    <h1 class="font-bold text-4xl">{{ exam.name }}</h1>
    <div class="flex flex-col gap-y-0.5">
        <span class="pl-2 text-xs text-gray-400 font-semibold">{{ exam.course.name }}</span>
        <span class="pl-2 text-xs text-gray-400 font-semibold">ID : {{ exam.id }}</span>
    </div>
</div>

<div class="flex flex-1 flex-col gap-y-4">
    <div class="flex max-w-full gap-x-4 overflow-x-auto mx-auto rounded-xl bg-white p-2 shadow-sm ring-1 ring-gray-950/5 ">
        {{ show_nav_item('/exams/'~exam.id, 
                        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5">
                            <path d="M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" />
                            <path fill-rule="evenodd" d="M1.323 11.447C2.811 6.976 7.028 3.75 12.001 3.75c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113-1.487 4.471-5.705 7.697-10.677 7.697-4.97 0-9.186-3.223-10.675-7.69a1.762 1.762 0 0 1 0-1.113ZM17.25 12a5.25 5.25 0 1 1-10.5 0 5.25 5.25 0 0 1 10.5 0Z" clip-rule="evenodd" />
                        </svg>',
                        'View') }}
                        {% if can('update exams') %}
        {{ show_nav_item('/exams/'~exam.id~'/edit', 
                        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5">
                            <path d="M21.731 2.269a2.625 2.625 0 0 0-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 0 0 0-3.712ZM19.513 8.199l-3.712-3.712-12.15 12.15a5.25 5.25 0 0 0-1.32 2.214l-.8 2.685a.75.75 0 0 0 .933.933l2.685-.8a5.25 5.25 0 0 0 2.214-1.32L19.513 8.2Z" />
                        </svg>',
                        'Edit') }}
                        {% endif %}
        {{ show_nav_item('/exams/'~exam.id~'/builder', 
                        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512" fill="currentColor" class="size-5">
                            <path d="M80 160c0-35.3 28.7-64 64-64l32 0c35.3 0 64 28.7 64 64l0 3.6c0 21.8-11.1 42.1-29.4 53.8l-42.2 27.1c-25.2 16.2-40.4 44.1-40.4 74l0 1.4c0 17.7 14.3 32 32 32s32-14.3 32-32l0-1.4c0-8.2 4.2-15.8 11-20.2l42.2-27.1c36.6-23.6 58.8-64.1 58.8-107.7l0-3.6c0-70.7-57.3-128-128-128l-32 0C73.3 32 16 89.3 16 160c0 17.7 14.3 32 32 32s32-14.3 32-32zm80 320a40 40 0 1 0 0-80 40 40 0 1 0 0 80z"/>
                        </svg>',
                        'Exam Builder') }}
    </div>
    
    <div id="exam-content" class="flex flex-col gap-y-3">
        <div class="flex max-w-full mx-8 rounded-xl bg-white px-2 shadow-sm ring-1 ring-gray-950/5">
            <div class="flex flex-col flex-1 p-4 gap-y-4 ">
                {% if can('update exams') %}

                <div class="flex gap-x-4">

                    <div class="flex flex-1 flex-col">
                        {{ forms.form_field(
                            label:forms.label(
                                id:'subject_weight', 
                                content:'Subject Weight(%) in Coverage Score', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                                ),
                            input:forms.number(
                                name:'subject_weight',
                                attributes:{
                                    'class':'flex-1 block w-full rounded-md bg-white px-3 py-1.5 placeholder:font-semibold placeholder:italic placeholder:text-xs text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                    'min':1,
                                    'max':100,
                                    'placeholder':'Default ratio of subject to topic is 60:40'}),
                            isColumn:true
                        )}}
                        {{ forms.form_field(
                            label:forms.label(
                                id:'criteria', 
                                content:'Criteria for Picking : ', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                                ),
                            input:forms.radio(
                                name:'criteria',
                                values: values,
                                value:'density',
                                attributes:{
                                    'class':'',
                                    })
                        )}}
                        <span class="text-gray-500 italic font-semibold text-xs">*Default criteria is density.</span>

                    </div>

                    <div class="flex flex-col justify-center">
                        <div class="flex gap-x-2 items-center pt-2">
                            <button class="cursor-pointer bg-orange-500 text-gray-200 hover:bg-orange-400 hover:text-white duration-300 rounded-lg p-2 font-semibold text-xs"
                                    type="button"
                                    popovertarget="build-exam-popover"
                                    hx-get="/exams/{{ exam.id }}/builder/swap-algorithm"
                                    hx-target="#build-exam-popover"
                                    hx-swap="innerHTML"
                                    hx-select="#algorithm-div"
                                    hx-vals='{"algorithm":"greedy"}'>
                            Greedy Algorithm
                            </button>
                            <button class="cursor-pointer bg-orange-500 text-gray-200 hover:bg-orange-400 hover:text-white duration-300 rounded-lg p-2 font-semibold text-xs"
                                    type="button"
                                    popovertarget="build-exam-popover"
                                    hx-get="/exams/{{ exam.id }}/builder/swap-algorithm"
                                    hx-target="#build-exam-popover"
                                    hx-swap="innerHTML"
                                    hx-select="#algorithm-div"
                                    hx-vals='{"algorithm":"dynamic"}'>
                                    Dynamic Programming
                            </button>               
                        </div>
                        <span class="text-gray-600 italic font-semibold text-xs self-end">*use an algorithm to scaffold the exam.</span>
                    </div>
                
                </div>

                {% endif %}
                <div class="flex flex-col flex-1">
                    <div id="tabs" class="flex" 
                            hx-get="/exams/builder/tabs" hx-trigger="load delay:100ms" 
                            hx-target="#tab-content" hx-swap="innerHTML" hx-select="#tab-info"></div>
                    <div id="tab-content" class="flex flex-col"></div>
                </div>  
            </div>
        </div>
        <div class="flex max-w-full mx-8 rounded-xl bg-white px-2 shadow-sm ring-1 ring-gray-950/5">
            <div class="flex flex-col p-4 flex-1 items-center">
                <h1 class="text-2xl font-bold text-gray-800">{{ exam.course.name }} </h1>
                <div class="flex gap-x-4">
                    <span id="question-count-field" class="text-xs font-semibold text-gray-500">Total Subjects : {{ exam_subjects.count() }}</span>
                    <span id="question-count-field" class="text-xs font-semibold text-gray-500">Total Topics : {{ exam_topics.count() }}</span>
                    <span id="question-count-field" class="text-xs font-semibold text-gray-500">Total Questions : {{exam_questions.count()}}</span>
                    <span id="score-count-field" class="text-xs font-semibold text-gray-500">Current Score : {{exam_questions.sum('points')}}</span>    
                </div>
                <span id="algortihm-field" class="text-xs italic font-semibold text-gray-500">Current Algorithm : {{ exam.applied_algorithm }}</span>    
            </div>  
        </div>

        <div class="flex max-w-full mx-8 justify-between gap-x-8">
            <div class="flex flex-1 max-w-full py-4 px-6 rounded-xl bg-white shadow-sm ring-1 ring-gray-950/5">
                <div id="subject-field" class="flex flex-col p-4 flex-1">
                    {{ show_header('Subjects') }}
                    <div class="flex flex-col gap-y-2 max-h-54 overflow-y-scroll no-scrollbar">
                    {% for subject in exam_subjects %}
                        <div class="flex justify-between m-1">
                            <p class="text-xs text-gray-600 font-semibold">{{ subject.name }}</p>
                            <p class="text-xs text-gray-500 font-semibold"> {{ subject.question_count }}</p>
                        </div>
                    {% endfor %}
                    </div>
                </div>  
            </div>
            
            <div class="flex flex-1 max-w-full py-4 px-6 rounded-xl bg-white shadow-sm ring-1 ring-gray-950/5">
                <div id="topic-field" class="flex flex-col p-4 flex-1">
                    {{ show_header('Topics', 'font-medium text-2xl ') }}
                    <div class="flex flex-col gap-y-2 max-h-54 overflow-y-scroll no-scrollbar">
                        {% for topic in exam_topics %}
                            <div class="flex justify-between">
                                <p class="text-xs text-gray-600 font-semibold mr-2">{{ topic.name }}</p> 
                                <p class="text-xs text-gray-500 font-semibold">{{ topic.question_count }}</p>
                            </div>
                        {% endfor %}
                    </div>
                </div>  
            </div>
            <div class="flex flex-1 max-w-full py-4 px-6 rounded-xl bg-white shadow-sm ring-1 ring-gray-950/5">
                <div id="type-field" class="flex flex-col p-4 flex-1">
                    {{ show_header('Types') }}
                    <div class="flex flex-col gap-y-2 max-h-54 overflow-y-scroll no-scrollbar">
                        {% for name, count in exam_question_types %}
                            <div class="flex justify-between m-1">
                                <p class="text-xs text-gray-600 font-semibold">{{ name|replace({'_': ' '})|title }}</p> 
                                <p class="text-xs text-gray-500">{{ count }}</p>
                            </div>  
                        {% endfor %}
                    </div>
                </div>  
            </div>
        </div>
        <div class="flex gap-x-2 mx-8">
            <span class="text-xs font-bold italic text-gray-500">*Total questions per Categories </span>  
            <span class="text-xs font-bold italic text-gray-500">*Categories are scrollable</span>
        </div>



        <div id="exam-question-field" class="flex flex-col mx-4 p-4">
            {% if can('update exams') %}

            <div class="flex ml-auto my-2">
                <button type="button" 
                        class="cursor-pointer bg-blue-600 text-gray-200 hover:bg-blue-500 hover:text-white duration-300 rounded-lg p-2 font-semibold text-sm"
                        popovertarget="add-question-popover">
                        Add Question
                </button>
            </div>

            {% endif %}
            <div class="flex justify-between items-center w-full h-16 p-8 bg-white border-x border-t border-gray-300 rounded-t-2xl">
                <h1 class="text-2xl font-medium text-gray-800">Exam Questions </h1>
                <h1>Filter here</h1>
            </div>
            <div class="overflow-auto max-w-full scroll-smooth border-x border-t border-gray-300">
                {{ table(questions_header, exam_questions_rows, url:'exams', forAdding:true, openAction:false, exam_id:exam.id, forRemoving:true, actions:can('update exams') ? true : false) }}
        
            </div>
            <div class="flex justify-end items-center w-full h-16 p-8 bg-white border-x border-b border-gray-300 rounded-b-2xl">
                <h1>Pagination</h1>
            </div>
        </div>
        {% if can('update exams') %}

        <div class="flex gap-x-2 mx-8 justify-end">
            {% if exam.published != 'published' %}
                <button type="submit" class="cursor-pointer bg-orange-600 text-gray-200 hover:bg-orange-500 hover:text-white duration-300 rounded-lg p-2 font-semibold text-sm">Publish</button>
            {% else %}
                <button form="none" class="cursor-pointer bg-red-600 text-gray-200 hover:bg-red-500 hover:text-white duration-300 rounded-lg p-2 font-semibold text-sm">
                    Unpublish
                </button>
            {% endif %}
        </div>



        <div popover="manual" class="w-full h-full backdrop:bg-gray-900/15 backdrop:backdrop-blur-[1px] m-auto p-6 bg-gray-50/0 rounded-xl" id="add-question-popover">
            <div id="available-question-field" class="flex flex-col flex-1 w-full p-4">
                {% if available_questions_rows.count != 0 %}
                <div class="flex justify-between items-center w-full h-16 p-8 bg-white border-x border-t border-gray-300 rounded-t-2xl">
                    <h1 class="text-2xl font-medium text-gray-800">Available Questions </h1>
                    <h1>Filter here</h1>
                </div>
                <div class="overflow-auto max-w-full scroll-smooth border-x border-t border-gray-300">
                    {{ table(questions_header, available_questions_rows, url:'exams', forAdding:true, openAction:false, exam_id:exam.id) }}
            
                </div>
                <div class="flex justify-end items-center w-full h-16 p-8 bg-white border-x border-b border-gray-300 rounded-b-2xl">
                    <h1>Pagination</h1>
                </div>
                {% else %}
                <div class="flex justify-between items-center w-full h-16 p-8 bg-white rounded-2xl">
                    <h1 class="text-2xl font-medium text-gray-800">No Available Questions </h1>
                </div>
                {% endif %}
            </div>
            
            <button popovertarget="add-question-popover" popovertargetaction="hide" class="fixed cursor-pointer right-0 top-0 pt-4 pr-4">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8 text-gray-800 font-bold">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
                </svg>          
            </button>
        </div>
    
        <div popover
            class="backdrop:bg-gray-900/15 backdrop:backdrop-blur-[1px] transition-discrete m-auto p-16 ease-in-out transition-opacity rounded-xl" 
            id="build-exam-popover"
            >
        </div>
    </div>
</div>
    <div id="spinner" hx-on::after-request="alert('Done making a request!')"
        class="htmx-indicator fixed w-full h-full flex items-center justify-center bg-white z-50 opacity-0 pointer-events-none transition-opacity duration-300 ease-in">
        <img class="mr-54" width="150" src="{{ asset('images/bars-scale.svg') }}"/>
    </div>

    {% endif %}
{% endblock %}