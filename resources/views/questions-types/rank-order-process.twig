{% from 'components/core/show-header' import show_header %}
{% import 'components/core/forms' as forms %}

{% include 'components/core/create-question-name-form' %}

<div class="flex flex-col p-4 flex-1">
    {{ show_header('Rank/Order/Process') }}
    <div class="flex gap-x-32 justify-between w-full">
        <div class="flex flex-col w-full">
            <div class="sortable">
                {% for i in range(1, item_count) %}
                    {{ forms.form_field(
                        label:forms.label(
                            id: 'items[]', 
                            content:'Item ' ~ (i), 
                            attributes:{
                                'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900 cursor-move'}
                            ),
                        input:forms.text(
                            name:'items[]',
                            value: old('items')[i - 1],
                            attributes:{
                                'class':'flex-1 block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 cursor-move',
                                'required':true
                            }),
                        errors:errors.get('items.' ~ (i-1))
                    )}}
                {% endfor %}
                <span id="swap"></span>
              </div>
              <span class="text-sm font-semibold text-gray-600 self-center py-1 italic">Items are draggable.</span>
        </div>
        <div class="flex flex-1/2 flex-col gap-y-4 w-full">
            {{ forms.form_field(
                label:forms.label(
                    id:'solution', 
                    content:'Solution', 
                    attributes:{
                        'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                    ),
                input:forms.select(
                    name:'solution', 
                    value: old('solution'),
                    values:{'':'Select a Solution', 'ascending':'Ascending Order', 'descending':'Descending Order'}, 
                    attributes:{
                        'class':'flex-1 block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                        'required':true
                    })
            )}}
            <button 
                type="button" 
                class="cursor-pointer bg-white border-1 border-gray-600 text-gray-900 hover:bg-gray-600 hover:text-white duration-300 rounded-lg px-2 py-2 font-semibold text-sm"
                hx-get="/questions/create/add-item?item_count={{ item_count }}"
                hx-target="#swap"
                hx-swap="beforebegin"
                >
                Add more Items
            </button>
        </div>
    </div>
</div>  

<script>
htmx.onLoad(function(content) {
    var sortables = content.querySelectorAll(".sortable");
    for (var i = 0; i < sortables.length; i++) {
      var sortable = sortables[i];
      var sortableInstance = new Sortable(sortable, {
          animation: 150,
          ghostClass: 'blue-background-class',

          // Make the `.htmx-indicator` unsortable
          filter: ".htmx-indicator",
          onMove: function (evt) {
            return evt.related.className.indexOf('htmx-indicator') === -1;
          }

          
      });

      // Re-enable sorting on the `htmx:afterSwap` event
      sortable.addEventListener("htmx:afterSwap", function() {
        sortableInstance.option("disabled", false);
      });
    }
})
  </script>