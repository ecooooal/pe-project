{% import 'components/core/forms' as forms %}
{% from 'components/core/show-header' import show_header %}
{% from 'components/core/show-item' import show_item %}
{% set values = {} %}
{% set solution = null %}

<div id="MultipleChoice-content">
    {% for choice in choices %}
        {% set values = values | merge({ (choice.choice_key): choice.item }) %}
        {% if choice.is_correct %}
            {% set solution = choice.choice_key %}
        {% endif %}
    {% endfor %}

    <div class="prose min-w-full">
        <h2>Sample View to Students</h2>
        <h3>{{ question.name|title }}</h3>
    </div>
    <div class="flex flex-col gap-y-2">
        {{ show_header('')}}
        {{ forms.form_field(
            input:forms.radio(
                name:'multiple_choice',
                values: values,
                attributes:{    
                    'class':'min-w-6 min-h-6 rounded-full bg-red-500 relative flex items-center justify-center',
                    },
                label_attributes:{
                    'class':'flex items-center gap-2 py-4 pl-4 pr-8 m-1 min-h-16 cursor-pointer bg-gray-50 rounded-lg border border-gray-100',
                    }),
            isColumn:true)
        }}

    {{ show_item('Solution', solution|title)}}
    </div>
</div>

<div id="TrueOrFalse-content">
    {% set values = {
        'true' : 'True',
        'false' : 'False',
    } %}
    {% set solution = choices.solution %}
    <div class="prose min-w-full">
        <h2>Sample View to Students</h2>
        <h3>{{ question.name|title }}</h3>
    </div>
        <div class="flex flex-col gap-y-2">
            {{ show_header('')}}
                {{ forms.form_field(
                    input:forms.radio(
                        name:'true_or_false',
                        values: values,
                        attributes:{    
                            'class':'min-w-6 min-h-6 rounded-full bg-red-500 relative flex items-center justify-center',
                            },
                        label_attributes:{
                            'class':'flex items-center gap-2 py-4 pl-4 pr-8 m-1 min-h-16 cursor-pointer bg-gray-50 rounded-lg border border-gray-100',
                            }),
                    isColumn:true)
                }}
            {{ show_item('Solution', solution|title)}}
        </div>
    </div>  
</div>

<div id="Identification-content">
{% set solution = choices.solution %}
    <div class="prose min-w-full">
        <h2>Sample View to Students</h2>
        <h3>{{ question.name|title }}</h3>
    </div>
        <div class="flex flex-col gap-y-2">
            {{ show_header('')}}
                {{ forms.form_field(
                    label:forms.label(
                        id:'solution', 
                        content:'Solution', 
                        attributes:{
                            'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900',}
                        ),
                    input:forms.text(
                        name:'solution', 
                        value: old('solution'), 
                        attributes:{
                            'class':'flex-1 block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                            'required':true}),
                    errors: errors.get('solution'),
                    isColumn:true
                )}}
            
            {{ show_item('Solution', solution|title)}}
        </div>
    </div>  
</div>

<div id="Ranking-content">
    {% set values = {} %}
    {% for choice in choices %}
        {% set values = values | merge({ (choice.order): choice.item }) %}
    {% endfor %}

    <div class="prose min-w-full">
        <h2>Sample View to Students</h2>
        <h3>{{ question.name|title }}</h3>
    </div>
    {{ show_header('')}}
    <div class="sortable bg-gray-50 p-4 rounded-lg">
        {% for i in range(1, values|length) %}
            {{ forms.form_field(
                label:forms.label(
                    id: 'items[]', 
                    content:values[i-1], 
                    attributes:{
                        'class':'flex-1 block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 cursor-move'}
                    ),
                input:forms.text(
                    name:'items[]',
                    value: values[i-1],
                    attributes:{
                        'class':'hidden',
                        'required':true
                    })
            )}}
        {% endfor %}
    </div>
    {{ show_item('Solution', solution|title)}}

    
<script>
    htmx.onLoad(function(content) {
        var sortables = content.querySelectorAll(".sortable");
        for (var i = 0; i < sortables.length; i++) {
        var sortable = sortables[i];
        var sortableInstance = new Sortable(sortable, {
            animation: 150,
            ghostClass: 'blue-background-class',

            // Make the `.htmx-indicator` unsortable
            filter: ".htmx-indicator",
            onMove: function (evt) {
                return evt.related.className.indexOf('htmx-indicator') === -1;
            }

            
        });

        // Re-enable sorting on the `htmx:afterSwap` event
        sortable.addEventListener("htmx:afterSwap", function() {
            sortableInstance.option("disabled", false);
        });
        }
    })
  </script>
</div>

<div id="Matching-content">
    Mathcing
</div>
