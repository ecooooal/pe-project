{% from 'components/core/show-nav-item' import show_nav_item %}
{% from 'components/core/breadcrumbs' import breadcrumb %}
{% from 'components/core/show-header' import show_header %}
{% from 'components/core/show-item' import show_item %}
{% import 'components/core/forms' as forms %}
{% set values = {
    'true' : 'True',
    'false' : 'False',
} %}

{% extends 'components/core/student-layout' %}

{% block content %}
{{ breadcrumb() }}

<div class="flex flex-1 flex-col max-w-full gap-y-4">
    <div class="flex flex-col md:flex-row max-w-full w-full">
        <div class="flex flex-1 w-full md:w-4/5  flex-col mx-8 rounded-xl bg-white p-4 shadow-sm ring-1 ring-gray-950/5">
            <div class="prose max-w-full">
                <h2>Rank the steps involved in writing and compiling a program in ascending order, from the initial code writing to execution?</h2>
            </div>
            {{ show_header('')}}
            <div class="sortable bg-gray-50 p-4 rounded-lg">
                {% for i in range(1, items|length) %}
                    {{ forms.form_field(
                        label:forms.label(
                            id: 'items[]', 
                            content:items[i-1], 
                            attributes:{
                                'class':'flex-1 block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 cursor-move'}
                            ),
                        input:forms.text(
                            name:'items[]',
                            value: items[i-1],
                            attributes:{
                                'class':'hidden',
                                'required':true
                            }),
                        errors:errors.get('items.' ~ (i-1))
                    )}}
                {% endfor %}
              </div>

        </div>  

        <div class=" flex flex-col md:w-1/5 ml-auto max-w-full gap-y-4 mr-8 max-h-fit rounded-xl bg-white p-4 shadow-sm ring-1 ring-gray-950/5">
            {{ show_item('Duration', '90 minutes')}}
            {{ show_item('Question', '15/80')}}
        </div>   
    </div>
    <div class="flex mx-8 gap-x-4">
        <a href="/student/exams/exam.id/iden-example" class="p-2 max-h-fit bg-orange-500 rounded-lg font-medium text-white hover:bg-orange-400 hover:text-gray-50 cursor-pointer">
            Back
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
            <path fill-rule="evenodd" d="M11.03 3.97a.75.75 0 0 1 0 1.06l-6.22 6.22H21a.75.75 0 0 1 0 1.5H4.81l6.22 6.22a.75.75 0 1 1-1.06 1.06l-7.5-7.5a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd" />
            </svg>
        </a>
        <a href="/student/exams/exam.id/coding-example" class="p-2 max-h-fit bg-orange-500 rounded-lg font-medium text-white hover:bg-orange-400 hover:text-gray-50 cursor-pointer">
            Next
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
            <path fill-rule="evenodd" d="M12.97 3.97a.75.75 0 0 1 1.06 0l7.5 7.5a.75.75 0 0 1 0 1.06l-7.5 7.5a.75.75 0 1 1-1.06-1.06l6.22-6.22H3a.75.75 0 0 1 0-1.5h16.19l-6.22-6.22a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
            </svg> 
        </a>
    </div>
   
</div>
<script>
htmx.onLoad(function(content) {
    var sortables = content.querySelectorAll(".sortable");
    for (var i = 0; i < sortables.length; i++) {
      var sortable = sortables[i];
      var sortableInstance = new Sortable(sortable, {
          animation: 150,
          ghostClass: 'blue-background-class',

          // Make the `.htmx-indicator` unsortable
          filter: ".htmx-indicator",
          onMove: function (evt) {
            return evt.related.className.indexOf('htmx-indicator') === -1;
          }

          
      });

      // Re-enable sorting on the `htmx:afterSwap` event
      sortable.addEventListener("htmx:afterSwap", function() {
        sortableInstance.option("disabled", false);
      });
    }
})
  </script>
{% endblock %}